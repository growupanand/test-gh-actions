name: Backend test coverage

on:
  push:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Run tests and generate coverage report
        run: npm test

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      
      # - name: Check minimum test coverage percentage
      #   run: |
      #     pct=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
      #     echo "Current test coverage: $pct"
      #     if (( pct < 40 )); then
      #       echo "Test coverage is less than 150%"
      #       exit 1
      
      - name: Final List files in the repository
        run: |
            ls ${{ github.workspace }}
      
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: coverage/coverage-summary.json
      

      # - name: Install dependencies
      #   run: npm install @actions/core octokit

      # - name: Update language tab
      #   uses: actions/github-script@v4
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const { Octokit } = require('@octokit/core');
      #       const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
      #       const testCoverageJSON = require("./coverage/coverage-summary.json");
      #       const totalCoverage = testCoverageJSON.total.lines.pct;
      #       const owner = process.env.GITHUB_REPOSITORY_OWNER;
      #       const repo = process.env.GITHUB_REPOSITORY_NAME;
      #       try {
      #         await octokit.request('POST /repos/{owner}/{repo}/topics', {
      #           "names": [
      #             "jest",
      #             "tests"
      #           ]
      #         });
      #         await octokit.request('POST /repos/{owner}/{repo}/topics', {
      #           owner: owner,
      #           repo: repo,
      #           names: ['jest', 'tests'],
      #         });
      #         await octokit.request('PUT /repos/{owner}/{repo}/topics', {
      #           owner: owner,
      #           repo: repo,
      #           names: ['jest', 'tests'],
      #         });
      #         await octokit.request('PUT /repos/{owner}/{repo}/contents/{path}', {
      #           owner: owner,
      #           repo: repo,
      #           path: 'test-results.xml',
      #           message: 'Update test results',
      #           content: totalCoverage,
      #         });
      #         core.info('Language tab updated successfully!');
      #       } catch (error) {
      #         core.setFailed(`Language tab update failed with error: ${error}`);


      - name: Update repository topics
        uses: andymckay/github-action@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          method: PUT
          endpoint: repos/${{ github.repository }}/topics
          data: '{"names": ["topic1", "topic2", "topic3"]}'
            


